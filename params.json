{"name":"Python-bayes-redis","tagline":"A Redis backend Naive Bayes Classifier in Python","body":"Simple Naive Bayes Classifier - Python\r\n======================================\r\n\r\nNaive Bayes Classifier is an algorithm to classify texts into sets that is always learning.\r\n\r\nThe most obvious practical use of it is for Email Spam/Ham Detection.\r\n\r\nMotivation\r\n----------\r\n\r\nThere is a really good video piece in Youtube [here](http://www.youtube.com/watch?v=yvDCzhbjYWs) by [Peter Norvig](http://en.wikipedia.org/wiki/Peter_Norvig), Director of Research at Google. He spoke about The Unreasonable Effectiveness of Data.\r\n\r\nAnother great piece about the algorithm explained in plain English is by [Alexander Nedelcu](https://www.bionicspirit.com/pages/about.html) with his [blog post here](http://bionicspirit.com/blog/2012/02/09/howto-build-naive-bayes-classifier.html).\r\n\r\nImplementation\r\n--------------\r\n\r\nBefore meddling with Python, I translated Alexander's implementation in Ruby to PHP available [here](https://github.com/tistaharahap/Simple-Naive-Bayes-Classifier-for-PHP).\r\n\r\nBenchmarking my oven fresh PHP implementation at the time, [Redis](http://redis.io) was the only answer to achieve sub-second results. I tried MySQL and MongoDB before Redis.\r\n\r\nExternal Dependencies\r\n---------------------\r\n- Redis <http://redis.io>\r\n- [Optional - For Data Import only] MySQL Python Connector <http://dev.mysql.com/doc/connector-python/en/index.html>\r\n\r\nUse Examples\r\n------------\r\n\r\nPlease take a look at [test.py](https://github.com/tistaharahap/python-bayes-redis/blob/master/test.py) for executing the classifier.\r\n\r\nTo import data using MySQL, take a look at [test-import-mysql.py](https://github.com/tistaharahap/python-bayes-redis/blob/master/test-import-mysql.py).\r\n\r\nPerformance\r\n-----------\r\n\r\nThe gear and spec used to test performance is below:\r\n- Macbook Pro Early 2011\r\n- Intel Core i5 2.3 GHz\r\n- 8 GB PC-10600 DDR3 RAM\r\n- SSD\r\n- Redis v2.6.13 compiled from source\r\n- Python v2.7.2\r\n\r\nThe data sets is as below:\r\n- 1,212 Sets\r\n- 311,525 Keywords\r\n\r\nClassifying Time:\r\n- 1 Keyword - PHP @ 0.01428 second - 0.0569310188293 second (Python v2.7.2 Mac) - 0.178730964661 second (PyPy v2.0.2 Mac)\r\n- 2 Keywords - PHP @ 0.02171 second - 0.0672879219055 second (Python v2.7.2 Mac) - 0.226923942566 second (PyPy v2.0.2 Mac)\r\n- 3 Keywords - PHP @ 0.04062 second - 0.088278055191 second (Python v2.7.2 Mac) - 0.246510982513 second (PyPy v2.0.2 Mac)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}